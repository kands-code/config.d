#! /bin/env bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias mvn="mvn --settings='${HOME}/.local/conf/settings.xml'"
alias ww="neofetch"

# stack
if
  type stack >/dev/null 2>&1
  [[ "$?" == '0' ]]
then
  eval "$(stack --bash-completion-script stack)"
fi

# pyenv
export PYENV_ROOT="$HOME/.local/share/pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# scala
if
  type scala >/dev/null 2>&1
  [[ "$?" == '0' ]]
then
  alias scala='scala'
  alias sbt='sbt -ivy "$XDG_DATA_HOME"/sbt/ivy2 -sbt-dir "$XDG_DATA_HOME"/sbt'
fi

# PS1='[\u@\h \W]\$ '

### self prompt
function exitstatus() {
  if [[ "$?" == '0' ]]; then
    printf "\033[1;32m[v]\033[0m"
  else
    printf "\033[1;31m[x]\033[0m"
  fi
}

function usersymbol() {
  if [[ "$UID" == '0' ]]; then
    printf "\033[1;31m[#]\033[0m"
  else
    printf "\033[1;36m[$]\033[0m"
  fi
}

export PS0='\[\033[0;36m\]Out[\#]:= \[\033[0m\]\n'
export PS1='[\u@\h \w \A]-\[$(exitstatus)\]-\[$(usersymbol)\]\n\[\033[0;33m\]In[\#]:= \[\033[0m\]'
export PS2=' ~> '

if [[ -d "$XDG_CONFIG_HOME"/dircolors ]]; then
  eval "$(dircolors "$XDG_CONFIG_HOME"/dircolors)"
fi

## for pandoc auto complete

if
  type pandoc >/dev/null 2>&1
  [[ "$?" == '0' ]]
then
  eval "$(pandoc --bash-completion)"
fi

# git gpg
export GPG_TTY=$(tty)

# yt-dlp
function yd() {
  local url="$1"
  shift
  if [ -z "$url" ]; then
    echo "please give a url"
    return 1
  fi
  yt-dlp -o "%(uploader_id)s/%(playlist_title)s/p%(playlist_index)03d-%(title)s.%(ext)s" \
    -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' \
    "$url" \
    "$@"
  return 0
}

# webm to mp4
function webm2mp4() {
  local filename="$1"
  local basename="${filename%.*}"
  ffmpeg -i "$filename" \
    -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" \
    -y -an -crf 0 \
    "$basename".mp4
}

# convert to a format by pandoc
function conv2f() {
  local ff="$1"
  shift
  local tt="$1"
  shift
  local filename="$1"
  shift
  local outputname="${filename%.*}.$tt"
  pandoc -f "$ff" -t "$tt" \
    "$filename" \
    -o "$outputname" \
    --pdf-engine=lualatex \
    --metadata-file="$HOME/workspace/github/config.d/other-config/pandoc-meta"
    "$@"
    # -Vlinestretch=1.5 \
    # -Vfontsize="12pt" \
    # -Vmainfont="Source Han Serif CN" \
    # -Vmonofont="Sarasa Mono Slab SC, Noto Color Emoji" \
    # -Vsansfont="Sarasa Gothic SC" \
    # -VCJKmainfont="Source Han Serif CN" \
    # -Vmathfont="Latin Modern Math" \
    # -V"geometry:margin"="20mm" \
    # "$@"
}
