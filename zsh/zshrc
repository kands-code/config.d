# for zsh
fpath=(
  /opt/homebrew/share/zsh/site-functions
  ~/.config/zsh/zfunc
  "${fpath[@]}")
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit
zstyle ':completion:*' use-cache on
zstyle ':completion:*' menu select
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:approximate:*' max-errors 1 numeric
zstyle ':completion:*' cache-path "$HOME/.cache/zsh/.compcache"
autoload -Uz promptinit
promptinit
prompt walters

# utils config
export GPG_TTY=$(tty)
export GNUPGHOME="$HOME/.local/share/gnupg"
eval "$(/opt/homebrew/bin/brew shellenv)"

# daily update
dailyup() {
  # brew
  brew update
  brew upgrade
  brew autoremove
  brew cleanup --prune=all
  ## rust
  if command -v rustup >/dev/null 2>&1; then
    rustup update
    if [ "$?" = '0' ]; then
      cargo install --all-features \
        mdbook \
        mdbook-katex \
        mdbook-toc \
        bat du-dust nu startship
    fi
  fi
}

# opam init
if command -v opam >/dev/null 2>&1; then
  eval "$(opam env)"
fi

# rye init
if command -v rye >/dev/null 2>&1; then
  if [ -n "$RYE_HOME" ]; then
    source "$RYE_HOME/env"
  fi
fi

# pandoc wrapper
if command -v pandoc >/dev/null 2>&1; then
  if command -v lualatex >/dev/null 2>&1; then
    cv2pdf() {
      local ftype="$1"
      shift
      local fname="$1"
      shift
      local oname="${fname%.*}.pdf"
      pandoc -f "$ftype" -t "pdf" "$fname" \
        -o "$oname" \
        --pdf-engine=lualatex \
        --metadata-file="$HOME/projects/config.d/others/pmeta.yaml"
    }
  fi
fi

# yt-dlp wrapper
if command -v yt-dlp >/dev/null 2>&1; then
  if command -v ffmpeg >/dev/null 2>&1; then
    yd() {
      local url="$1"
      shift
      if [ -z "$url" ]; then
        echo "please give a url"
        return 1
      fi
      yt-dlp -o "%(uploader_id)s/%(playlist_title)s/p%(playlist_index)03d-%(title)s.%(ext)s" \
        -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' \
        "$url" \
        "$@"
      return 0
    }
  fi
fi
